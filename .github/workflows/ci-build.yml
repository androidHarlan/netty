name: Build project

on:
  push:
    branches: [ "4.1"]

  schedule:
    - cron: '30 1 * * 1'  # At 01:30 on Monday, every Monday.

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  
  build-linux-x86_64-java8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Cache .m2/repository
      - uses: actions/cache@v2
        env:
          cache-name: build-linux-x86_64-java8-cache-m2-repository
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-

      # Enable caching of Docker layers
      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
        with:
          key: build-linux-x86_64-java8-docker-cache-{hash}
          restore-keys: |
            build-linux-x86_64-java8-docker-cache-

      - name: Build docker image
        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml build

      - name: Build project without leak detection
        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.18.yaml run build

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: target
          path: "**/target/"

  build-linux-x86_64-java11:
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - uses: actions/checkout@v2

      # Cache .m2/repository
      - uses: actions/cache@v2
        env:
          cache-name: build-linux-x86_64-java11-cache-m2-repository
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-

      # Enable caching of Docker layers
      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
        with:
          key: build-linux-x86_64-java11-docker-cache-{hash}
          restore-keys: |
            build-linux-x86_64-java11-docker-cache-

      - name: Build docker image
        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml build

      - name: Build project without leak detection
        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.111.yaml run build

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: target
          path: "**/target/"

  build-linux-x86_64-java15:
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - uses: actions/checkout@v2

      # Cache .m2/repository
      - uses: actions/cache@v2
        env:
          cache-name: build-linux-x86_64-java15-cache-m2-repository
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-

      # Enable caching of Docker layers
      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
        with:
          key: build-linux-x86_64-java15-docker-cache-{hash}
          restore-keys: |
            build-linux-x86_64-java15-docker-cache-

      - name: Build docker image
        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.115.yaml build

      - name: Build project without leak detection
        run: docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.centos-6.115.yaml run build

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: target
          path: "**/target/"
